service: lambda-authorizer-example

frameworkVersion: "3"

provider:
  name: aws
  runtime: provided.al2
  region: ap-northeast-1

package:
  patterns:
    - "!./**"
    - ./cmd/bin/**

functions:
  example-api:
    handler: cmd/api/main.go
    role: GoAuthorizerLambda
    timeout: 30
    description: go echo lambda test
    memorySize: 128
    events:
      - http:
          path: /{proxy+}
          method: any

custom:
  go:
    cmd: GOARCH=amd64 GOOS=linux go build -ldflags="-s -w"
    supportedRuntimes: ["provided.al2"]
    buildProvidedRuntimeAsBootstrap: true

resources:
  Resources:
    GoAuthorizerLambda:
      Type: AWS::IAM::Role
      Properties:
        RoleName: GoAuthorizerLambdaRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: GoAuthorizerLambda
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource: "*"
plugins:
  - serverless-go-plugin
